
[platformio]
extra_configs = 
  factory_settings.ini
  features.ini
default_envs = esp32

[env]
build_flags=
  ; ${factory_settings.build_flags}
  ; ${features.build_flags}
  -D NO_GLOBAL_ARDUINOOTA
  ; Uncomment PROGMEM_WWW to enable the storage of the WWW data in PROGMEM
  -D PROGMEM_WWW
  ; Uncomment to configure Cross-Origin Resource Sharing
  ;-D ENABLE_CORS
  ;-D CORS_ORIGIN=\"*\"

; ensure transitive dependencies are included for correct platforms only
lib_compat_mode = strict

;; Uncomment & modify the lines below in order to configure OTA updates
;upload_flags = 
;  --port=8266 
;  --auth=WlXz4q@Uz!ZM+d3T
;upload_port = 10.39.30.56
;upload_protocol = espota
;
framework = arduino
monitor_speed = 115200

lib_deps =
  ArduinoJson@>=6.0.0,<7.0.0
  ; The following allows the use of the latest code for ESPAsyncWebServer - there hasn't been a release in a while
  ; Work around for https://github.com/me-no-dev/ESPAsyncWebServer/issues/1151
  ;https://github.com/me-no-dev/ESPAsyncWebServer
  ;ESP Async WebServer@>=1.2.0,<2.0.0
  ;AsyncMqttClient@>=0.9.0,<1.0.0
  


[env:esp32]
; Comment out min_spiffs.csv setting if disabling PROGMEM_WWW with ESP32
board_build.partitions = min_spiffs.csv
platform = espressif32
board = az-delivery-devkit-v4
board_build.filesystem = littlefs

[env:esp32Front]
; Comment out min_spiffs.csv setting if disabling PROGMEM_WWW with ESP32
board_build.partitions = min_spiffs.csv
platform = espressif32
board = az-delivery-devkit-v4
board_build.filesystem = littlefs
extra_scripts = pre:../scripts/build_frontend.py